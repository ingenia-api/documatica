<%- r = config[:resource] %>
require 'rest_client'
# 
# Spec for <%= r.name %>
#

describe '<%= r.name %>' do
  let(:api_key){ 'YhSysdemYvxqENGrSCHP' }
  <%- r.requests.each do |req| %>
  describe '<%= req.name %>' do
    it 'calls <%= req.name %>' do
      puts "<%= api.endpoint %><%= req.path[1..-1] %>"
      <%- if req.call_type == :get %>
      response = RestClient.<%= req.call_type %> '<%= api.endpoint %><%= req.path[1..-1] %>', { :params =>  { :api_key => api_key }.merge( <%= req.to_params %> ) }
      <%- else %>
      response = RestClient.<%= req.call_type %> '<%= api.endpoint %><%= req.path[1..-1] %>', { :api_key => api_key }.merge( <%= req.to_params %> ) 
      <%- end %>
      
      response.code.should be_okay
      puts response
    end

<%- if req.response %>
    it 'responds as expected' do
      <%- if req.call_type == :get %>
      response = RestClient.<%= req.call_type %> '<%= api.endpoint %><%= req.path[1..-1] %>', { :params =>  { :api_key => api_key } }
      <%- else %>
      response = RestClient.<%= req.call_type %> '<%= api.endpoint %><%= req.path[1..-1] %>', :api_key => api_key
      <%- end %>
      
      response.should == '<%= req.response.to_params %>'
    end
<%- end %>
  end
  <%- end %> 
end